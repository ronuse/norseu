{"version":3,"sources":["../../src/components/RonuseSelect.js","../../src/components/RonuseImageChooser.js","components/FormInputPage.js","components/ImageChooserPage.js","components/LandingPage.js","App.js","index.js"],"names":["RonuseSelect","props","optionsView","className","styles","option","value","key","name","id","defaultValue","onChange","evt","RonuseImageChooser","child1","React","child2","shouldInputDisplay","faIcon","labelDiv","onClick","onClickHandler","style","margin","defaultStyle","onClickHandlerOptional","ref","type","event","Array","extMatches","file","ext","Error","objectUrl","URL","FormInputPage","Component","previewText","text","document","getElementById","textContent","render","fontSize","color","fontWeight","options","label","this","labelAsValue","ImageChooserPage","error","files","fileExtensions","defaultImageSrc","faClassName","LandingPage","to","App","exact","path","component","ReactDOM"],"mappings":"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","file":"static/js/main.983f30de.chunk.js","sourcesContent":["\r\nimport React from \"react\"\r\nimport styles from '../styles.module.css'\r\n\r\nexport function RonuseSelect(props) {\r\n\r\n    var optionsView = [];\r\n    let className = props.className ? props.className : styles['ronuse-form-input'];\r\n    if (props.options) {\r\n        for (var option of props.options) {\r\n            var value = props.labelAsValue ? option.label : option.value;\r\n            optionsView.push(\r\n                <option key={option.value} value={value} >{option.label}</option>\r\n            )\r\n        }\r\n    }\r\n\r\n    function onChangeDispacher(evt) {\r\n        if (!props.onChange) {\r\n            return;\r\n        }\r\n        props.onChange(evt, evt.target.value)\r\n    }\r\n\r\n    return (\r\n        <select className={className} name={props.name} id={props.id} \r\n                defaultValue={props.defaultValue} onChange={onChangeDispacher}>\r\n                    \r\n            {optionsView}\r\n        </select>\r\n    )\r\n}\r\n","\r\n\r\nimport React from \"react\"\r\nimport styles from '../styles.module.css'\r\n\r\nexport function RonuseImageChooser(props) {\r\n\r\n    const child1 = React.createRef(null);\r\n    const child2 = React.createRef(null);\r\n    const className = props.className ? styles['ronuse-image-chooser'] + \" \" + props.className : styles['ronuse-image-chooser'];\r\n    const shouldInputDisplay = props.displayInputElement ? styles['display-block'] : styles['display-none'];\r\n    const faIcon = props.faClassName ? <span className={props.faClassName + \" \" + styles['margin-5px']} ></span> : <span />;\r\n    var labelDiv = props.label ? \r\n                    <div className={styles['ronuse-image-chooser-label']} onClick={onClickHandler}>\r\n                        {faIcon}\r\n                        <span style={ {margin: \"5px\"} } >{props.label ? props.label : \"Select\"}</span>\r\n                    </div>\r\n                    : <div/>\r\n    var defaultStyle = {}\r\n    var onClickHandlerOptional = () => {}\r\n\r\n    if (props.defaultImageSrc) {\r\n        defaultStyle.background = `url(${props.defaultImageSrc})`\r\n    }\r\n    if (!props.label) {\r\n        defaultStyle.cursor = 'pointer'\r\n        onClickHandlerOptional = onClickHandler\r\n    }\r\n    if (props.appendClassName) {\r\n        className += \" \" + props.appendClassName;\r\n    }\r\n\r\n    function onClickHandler() {\r\n        child2.current.click()\r\n    }\r\n    function onChangeHandler(event) {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            if (Array.isArray(props.fileExtensions)) {\r\n                var extMatches = true\r\n                Array.from(event.target.files).every(file => {\r\n                    if (!props.fileExtensions.find(ext => file.name.endsWith(ext))) {\r\n                        extMatches = false\r\n                        return false\r\n                    }\r\n                    return true\r\n                })\r\n                \r\n                if (extMatches === false) {\r\n                    if (props.onChange) {\r\n                        props.onChange(\r\n                            new Error(\"One of the select file does not match the specified file formats \" + props.fileExtensions),\r\n                            undefined)\r\n                    }\r\n                    return\r\n                }\r\n            }\r\n            var file = event.target.files[0];\r\n            const objectUrl = URL.createObjectURL(file)\r\n            child1.current.style.background = `url(${objectUrl})`\r\n            if (props.onChange) {\r\n                props.onChange(undefined, event.target.files)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={child1} className={className} style={ defaultStyle } onClick={onClickHandlerOptional}>\r\n            <input ref={child2} name={props.name} className={ shouldInputDisplay } type=\"file\" id={props.id} onChange={onChangeHandler}/>\r\n            {labelDiv}\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from \"react\"\r\nimport { RonuseSelect } from 'ronuse-react-components'\r\n\r\nclass FormInputPage extends React.Component {\r\n\r\n    previewText = function (text) {\r\n        document.getElementById(\"preview-text\").textContent = \" \" + text\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>Select</h1>\r\n\r\n                    <p style={{fontSize: \"20px\", color: \"grey\"}}>Preview: \r\n                    <span style={{fontWeight: \"bold\", color: \"black\"}} id=\"preview-text\"></span></p>\r\n                    \r\n                    <span>RonuseSelect: </span>\r\n                    <RonuseSelect\r\n                        options={[\r\n                            {value : \"true\", label: \"Yes\"},\r\n                            {value : \"false\", label: \"No\"}\r\n                        ]}\r\n                        defaultValue={\"false\"}\r\n                        onChange={(event, value) => {\r\n                            this.previewText(value);\r\n                        }}\r\n                    />\r\n\r\n                    <span>RonuseSelect with label as value </span>\r\n                    <RonuseSelect\r\n                        options={[\r\n                            {value : \"true\", label: \"Yes\"},\r\n                            {value : \"false\", label: \"No\"}\r\n                        ]}\r\n                        labelAsValue={true}\r\n                        defaultValue={\"Yes\"}\r\n                        onChange={(event, value) => {\r\n                            this.previewText(value);\r\n                        }}\r\n                    />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormInputPage;","\r\nimport React from \"react\"\r\nimport { RonuseImageChooser } from 'ronuse-react-components'\r\n\r\nclass ImageChooserPage extends React.Component {\r\n\r\n    previewText = function (text) {\r\n        document.getElementById(\"preview-text\").textContent = \" \" + text\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>Image Chooser</h1>\r\n\r\n                    <p style={{fontSize: \"20px\", color: \"grey\"}}>You selected: \r\n                    <span style={{fontWeight: \"bold\", color: \"black\"}} id=\"preview-text\"></span></p>\r\n\r\n                    <div className=\"display-flex\">\r\n                        <div className=\"margin-20px\">\r\n                            <span>RonuseImageChooser with label</span>\r\n                            <RonuseImageChooser\r\n                                onChange={(error, files) => {\r\n                                    for (var file of files) {\r\n                                        this.previewText(file.name);\r\n                                    }\r\n                                }}\r\n                                fileExtensions={[\"png\", \"jpg\", \"JPG\", \"PNG\", \"jpeg\"]}\r\n                                label={\"Edit\"}\r\n                                defaultImageSrc={\"https://avatars3.githubusercontent.com/u/69908664?s=200&v=4\"}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"margin-20px\">\r\n                            <span>RonuseImageChooser with label and font awesome icon</span>\r\n                            <RonuseImageChooser\r\n                                faClassName=\"fa fa-pencil\"\r\n                                onChange={(error, files) => {\r\n                                    for (var file of files) {\r\n                                        this.previewText(file.name);\r\n                                    }\r\n                                }}\r\n                                fileExtensions={[\"png\", \"jpg\", \"JPG\", \"PNG\", \"jpeg\"]}\r\n                                label={\"Edit\"}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"margin-20px\">\r\n                            <span>RonuseImageChooser without label image clickable</span>\r\n                            <RonuseImageChooser\r\n                                onChange={(error, files) => {\r\n                                    for (var file of files) {\r\n                                        this.previewText(file.name);\r\n                                    }\r\n                                }}\r\n                                fileExtensions={[\"png\", \"jpg\", \"JPG\", \"PNG\", \"jpeg\"]}\r\n                                defaultImageSrc={\"https://avatars3.githubusercontent.com/u/69908664?s=200&v=4\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-20px\">\r\n                            <span>RonuseImageChooser without custom css</span>\r\n                            <RonuseImageChooser\r\n                                faClassName=\"fa fa-pencil\"\r\n                                className=\"round-image-chooser\"\r\n                                onChange={(error, files) => {\r\n                                    for (var file of files) {\r\n                                        this.previewText(file.name);\r\n                                    }\r\n                                }}\r\n                                fileExtensions={[\"png\", \"jpg\"]}\r\n                                label={\"Change Image\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-20px\">\r\n                            <span>RonuseImageChooser without custom css no label</span>\r\n                            <RonuseImageChooser\r\n                                faClassName=\"fa fa-pencil\"\r\n                                className=\"round-image-chooser\"\r\n                                onChange={(error, files) => {\r\n                                    for (var file of files) {\r\n                                        this.previewText(file.name);\r\n                                    }\r\n                                }}\r\n                                defaultImageSrc={\"https://avatars3.githubusercontent.com/u/69908664?s=200&v=4\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageChooserPage;","\r\nimport React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nclass LandingPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               Hello\r\n\r\n               <br/>\r\n               <NavLink to=\"/form_inputs\"> View Form Inputs Components </NavLink>\r\n               <br/>\r\n               <NavLink to=\"/image_chooser\" > View Image Chooser Components </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","\nimport React from 'react'\nimport {HashRouter, Switch, Route} from \"react-router-dom\"\nimport FormInputPage from \"./components/FormInputPage\"\nimport ImageChooserPage from \"./components/ImageChooserPage\"\nimport LandingPage from \"./components/LandingPage\"\n\n//import 'ronuse-react-components/dist/index.css'\n\nconst App = () => {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage}/>\n                <Route path=\"/form_inputs\" component={FormInputPage}/>\n                <Route path=\"/image_chooser\" component={ImageChooserPage}/>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}